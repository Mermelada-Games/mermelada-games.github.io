---
import GameButton from './GameButton.astro';

export interface Props {
    imgSrc: string;
    title: string;
    buttonText?: string;
    buttonLink?: string;
    imgAlt?: string;
    textSize?: string;
    showButton?: boolean;
    imgHeight?: string;
    showOverlay?: boolean;
}

const { 
    imgSrc, 
    title, 
    buttonText = "VIEW THE GAME", 
    buttonLink = "", 
    imgAlt = "Game Image",
    textSize = "4rem",
    showButton = true,
    imgHeight = "50vh",
    showOverlay = true
} = Astro.props;

const transitionName = title.toLowerCase().replace(/[^a-z0-9]/g, '-').replace(/-+/g, '-').replace(/^-|-$/g, '');
---

<div class="game-container">
  <img src={imgSrc} alt={imgAlt} class="game-img" style={`height: ${imgHeight}; max-height: ${imgHeight};`} />
  {showOverlay && <div class="image-overlay"></div>}
  <div class="game-overlay">
    <h2 class="game-title" style={`font-size: ${textSize}; margin-bottom: ${showButton ? '1.5rem' : '0'};`} transition:name={`game-title-${transitionName}`}>{title}</h2>
    {showButton && <div transition:name={`game-button-${transitionName}`}><GameButton link={buttonLink} text={buttonText} /></div>}
  </div>
</div>
<style>
  .game-container {
    position: relative;
    width: 100%;
    max-width: 100%;
    overflow: hidden;
  }
  .game-img {
    width: 100%;
    object-fit: cover;
    display: block;
  }
  .image-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.2);
    pointer-events: none;
    transition: background-color 0.5s ease-in-out;
  }
  .game-container:has(a:hover) .image-overlay {
    background-color: rgba(0, 0, 0, 0);
  }
  .game-overlay {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: var(--palette-9);
    text-align: center;
    width: 100%;
    max-width: 90%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    transition: all 0.5s ease-in-out;
  }
  .game-title {
    text-shadow: 0 2px 8px rgba(0,0,0,0.7);
    text-align: center;
    width: 100%;
  }

  [style*="view-transition-name: game-title-"]::view-transition-old,
  [style*="view-transition-name: game-title-"]::view-transition-new {
    animation-duration: 0.4s;
    animation-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  [style*="view-transition-name: game-button-"]::view-transition-old,
  [style*="view-transition-name: game-button-"]::view-transition-new {
    animation-duration: 0.3s;
    animation-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  [style*="view-transition-name: game-button-"]::view-transition-old {
    animation-name: fade-out-scale;
  }

  @keyframes fade-out-scale {
    0% {
      opacity: 1;
      transform: scale(1);
    }
    100% {
      opacity: 0;
      transform: scale(0.95);
    }
  }

  [style*="view-transition-name: game-title-"]::view-transition-new {
    animation-name: slide-center;
  }

  @keyframes slide-center {
    0% {
      transform: translateY(-10px);
      opacity: 0.9;
    }
    100% {
      transform: translateY(0);
      opacity: 1;
    }
  }
</style>
